{"version":3,"sources":["images/logo.svg","pages/HomePage.tsx","pages/TypographyPage.tsx","pages/CasesPage.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","__webpack_require__","p","HomePage","react_default","a","createElement","className","TypographyPage","CasesPage","App","react_router_dom","src","require","alt","style","maxWidth","react_router","exact","path","component","to","xmlns","width","height","fill","viewBox","d","baseProfile","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.633556b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.dec53c61.svg\";","import React from \"react\";\n\nexport function HomePage() {\n    return (\n        <div>\n            <h1 className=\"mt-4 mb-3\">Home</h1>\n        </div>\n    );\n}","import React from \"react\";\n\nexport function TypographyPage() {\n    return (\n        <div>\n            <h1 className=\"mt-4 mb-3\">Typography</h1>\n        </div>\n    );\n}","import React from \"react\";\n\nexport function CasesPage() {\n    return (\n        <div>\n            <h1 className=\"mt-4 mb-3\">Cases</h1>\n        </div>\n    );\n}","import React from \"react\";\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\n\nimport { HomePage } from \"./pages/HomePage\";\nimport { TypographyPage } from \"./pages/TypographyPage\";\nimport { CasesPage } from \"./pages/CasesPage\";\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App container-fluid\">\n                <div className=\"row\">\n                    <div className=\"d-none d-md-block col-sm-2 col-md-3 bg-acrylic pt-3\">\n                        <div className=\"offset-lg-3\">\n                            <img src={require(\"./images/logo.svg\")} alt=\"EasyTrade.bet\" className=\"mx-3 mt-4 mb-3\" style={{ maxWidth: \"160px\" }} />\n                        </div>\n                    </div>\n\n                    <div className=\"col-sm-10 col-md-8 pt-3\">\n                        <h1 className=\"display-4 mt-4 mb-3\">Design System</h1>\n\n\n                        <Route exact path=\"/\" component={HomePage} />\n                        <Route path=\"/typography\" component={TypographyPage} />\n                        <Route path=\"/cases\" component={CasesPage} />\n                    </div>\n                </div>\n\n                <nav className=\"tabs-nav bg-acrylic d-md-none\">\n                    <NavLink className=\"tabs-nav-item\" to=\"/\" exact>\n                        <div className=\"tabs-nav-item-icon-outlined\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\" /><path d=\"M12 5.69l5 4.5V18h-2v-6H9v6H7v-7.81l5-4.5M12 3L2 12h3v8h6v-6h2v6h6v-8h3L12 3z\" /></svg>\n                        </div>\n                        <div className=\"tabs-nav-item-icon-filled\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" /><path d=\"M0 0h24v24H0z\" fill=\"none\" /></svg>\n                        </div>\n                        <div className=\"tabs-nav-item-label\">Home</div>\n                    </NavLink>\n\n                    <NavLink className=\"tabs-nav-item\" to=\"/typography\">\n                        <div className=\"tabs-nav-item-icon-outlined\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\" /><path d=\"M9.17 15.5h5.64l1.14 3h2.09l-5.11-13h-1.86l-5.11 13h2.09l1.12-3zM12 7.98l2.07 5.52H9.93L12 7.98zM20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 18H4V4h16v16z\" /></svg>\n                        </div>\n                        <div className=\"tabs-nav-item-icon-filled\">\n                            <svg baseProfile=\"tiny\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\" /><path d=\"M9.93 13.5h4.14L12 7.98zM20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-4.05 16.5l-1.14-3H9.17l-1.12 3H5.96l5.11-13h1.86l5.11 13h-2.09z\" /></svg>\n                        </div>\n                        <div className=\"tabs-nav-item-label\">Typography</div>\n                    </NavLink>\n\n                    <NavLink className=\"tabs-nav-item\" to=\"/cases\">\n                        <div className=\"tabs-nav-item-icon-outlined\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\" /><path d=\"M20 7h-4V5l-2-2h-4L8 5v2H4c-1.1 0-2 .9-2 2v5c0 .75.4 1.38 1 1.73V19c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2v-3.28c.59-.35 1-.99 1-1.72V9c0-1.1-.9-2-2-2zM10 5h4v2h-4V5zM4 9h16v5h-5v-3H9v3H4V9zm9 6h-2v-2h2v2zm6 4H5v-3h4v1h6v-1h4v3z\" /></svg>\n                        </div>\n                        <div className=\"tabs-nav-item-icon-filled\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0zm10 5h4v2h-4zm0 0h4v2h-4z\" /><path d=\"M10 16v-1H3.01L3 19c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2v-4h-7v1h-4zm10-9h-4.01V5l-2-2h-4l-2 2v2H4c-1.1 0-2 .9-2 2v3c0 1.11.89 2 2 2h6v-2h4v2h6c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zm-6 0h-4V5h4v2z\" /></svg>\n                        </div>\n                        <div className=\"tabs-nav-item-label\">Cases</div>\n                    </NavLink>\n                </nav>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won\"t work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let\"s check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It\"s the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can\"t reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles/main.scss\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}