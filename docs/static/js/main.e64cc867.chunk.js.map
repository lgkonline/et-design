{"version":3,"sources":["images/logo.svg","pages/HomePage.tsx","pages/TypographyPage.tsx","pages/CasesPage.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","__webpack_require__","p","HomePage","react_default","a","createElement","className","TypographyPage","CasesPage","App","navItems","icon","normal","xmlns","width","height","fill","viewBox","d","active","label","to","exact","baseProfile","react_router_dom","src","require","alt","style","maxWidth","map","navItem","index","key","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e64cc867.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ed48986d.svg\";","import React from \"react\";\r\n\r\nexport function HomePage() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"mt-4 mb-3\">Home</h1>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport function TypographyPage() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"mt-4 mb-3\">Typography</h1>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport function CasesPage() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"mt-4 mb-3\">Cases</h1>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\r\n\r\nimport { HomePage } from \"./pages/HomePage\";\r\nimport { TypographyPage } from \"./pages/TypographyPage\";\r\nimport { CasesPage } from \"./pages/CasesPage\";\r\n\r\nfunction App() {\r\n    const navItems = [\r\n        {\r\n            icon: {\r\n                normal: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\" /><path d=\"M12 5.69l5 4.5V18h-2v-6H9v6H7v-7.81l5-4.5M12 3L2 12h3v8h6v-6h2v6h6v-8h3L12 3z\" /></svg>,\r\n                active: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" /><path d=\"M0 0h24v24H0z\" fill=\"none\" /></svg>\r\n            },\r\n            label: \"Home\",\r\n            to: \"/\",\r\n            exact: true\r\n        },\r\n        {\r\n            icon: {\r\n                normal: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\" /><path d=\"M9.17 15.5h5.64l1.14 3h2.09l-5.11-13h-1.86l-5.11 13h2.09l1.12-3zM12 7.98l2.07 5.52H9.93L12 7.98zM20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 18H4V4h16v16z\" /></svg>,\r\n                active: <svg baseProfile=\"tiny\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\" /><path d=\"M9.93 13.5h4.14L12 7.98zM20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-4.05 16.5l-1.14-3H9.17l-1.12 3H5.96l5.11-13h1.86l5.11 13h-2.09z\" /></svg>\r\n            },\r\n            label: \"Typography\",\r\n            to: \"/typography\"\r\n        },\r\n        {\r\n            icon: {\r\n                normal: (<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\" /><path d=\"M20 7h-4V5l-2-2h-4L8 5v2H4c-1.1 0-2 .9-2 2v5c0 .75.4 1.38 1 1.73V19c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2v-3.28c.59-.35 1-.99 1-1.72V9c0-1.1-.9-2-2-2zM10 5h4v2h-4V5zM4 9h16v5h-5v-3H9v3H4V9zm9 6h-2v-2h2v2zm6 4H5v-3h4v1h6v-1h4v3z\" /></svg>),\r\n                active: (<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0zm10 5h4v2h-4zm0 0h4v2h-4z\" /><path d=\"M10 16v-1H3.01L3 19c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2v-4h-7v1h-4zm10-9h-4.01V5l-2-2h-4l-2 2v2H4c-1.1 0-2 .9-2 2v3c0 1.11.89 2 2 2h6v-2h4v2h6c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zm-6 0h-4V5h4v2z\" /></svg>)\r\n            },\r\n            label: \"Cases\",\r\n            to: \"/cases\"\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"App container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"d-none d-md-block col-sm-2 col-md-3 bg-acrylic pt-3\">\r\n                        <div className=\"offset-lg-3\">\r\n                            <img src={require(\"./images/logo.svg\")} alt=\"EasyTrade.bet\" className=\"mx-3 mt-4 mb-3\" style={{ maxWidth: \"160px\" }} />\r\n\r\n                            <nav className=\"et-nav menu-nav\">\r\n                                {navItems.map((navItem, index) =>\r\n                                    <NavLink key={index} className=\"et-nav-item\" to={navItem.to} exact={navItem.exact}>\r\n                                        <div className=\"et-nav-item-icon-outlined\">\r\n                                            {navItem.icon.normal}\r\n                                        </div>\r\n                                        <div className=\"et-nav-item-icon-filled\">\r\n                                            {navItem.icon.active}\r\n                                        </div>\r\n                                        <div className=\"et-nav-item-label\">{navItem.label}</div>\r\n                                    </NavLink>\r\n                                )}\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-10 col-md-9 pt-3 bg-main\">\r\n                        <h1 className=\"display-4 mt-4 mb-3\">Design System</h1>\r\n\r\n\r\n                        <Route exact path=\"/\" component={HomePage} />\r\n                        <Route path=\"/typography\" component={TypographyPage} />\r\n                        <Route path=\"/cases\" component={CasesPage} />\r\n                    </div>\r\n                </div>\r\n\r\n                <nav className=\"et-nav tabs-nav bg-acrylic d-md-none\">\r\n                    {navItems.map((navItem, index) =>\r\n                        <NavLink key={index} className=\"et-nav-item\" to={navItem.to} exact={navItem.exact}>\r\n                            <div className=\"et-nav-item-icon-outlined\">\r\n                                {navItem.icon.normal}\r\n                            </div>\r\n                            <div className=\"et-nav-item-icon-filled\">\r\n                                {navItem.icon.active}\r\n                            </div>\r\n                            <div className=\"et-nav-item-label\">{navItem.label}</div>\r\n                        </NavLink>\r\n                    )}\r\n                </nav>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === \"[::1]\" ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(\r\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n        )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won\"t work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let\"s check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served cache-first by a service \" +\r\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It\"s the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log(\"Content is cached for offline use.\");\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error during service worker registration:\", error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can\"t reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get(\"content-type\");\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                \"No internet connection found. App is running in offline mode.\"\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./styles/main.scss\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}